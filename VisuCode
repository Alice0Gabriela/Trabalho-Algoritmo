public class Main {
    
}

public static void main(String[ ] args){
	import java.util.LinkedList; // Class Which implements queue list etc.
import java.util.Queue;     //queue is an iterface 

public class Main 
{
    public static void main(String[] args) 
    {
        
        Queue<String> queue = new LinkedList<>();
        //to implement Queue

        //Adding In Queue  using `add()` method
        queue.add("Maria");  //enque
        queue.add("Alice"); // enque
        queue.add("Clarice"); //enquue
        queue.add("Daniele");
        queue.offer("Davi");   // alternatice enque

        System.out.println("Queue : " + queue); //queue print
		Queue<String> queue = new LinkedList<>();
        //to implement Queue

        //Adding In Queue  using `add()` method
        queue.add("Maria");  //enque
        queue.add("Alice"); // enque
        queue.add("Clarice"); //enquue
        queue.add("Daniele");
        queue.offer("Davi");   // alternatice enque

        System.out.println("Queue : " + queue); //queue print

         String name = queue.remove();         //Dequeue 
         System.out.println("Removed from queue : " + name );
         System.out.println(queue);
                  

      name= queue.poll();   // altrenative deque method
      System.out.println("Removed from queue : " + name );
      System.out.println(queue);  

	  // Java program to demonstrate the working
// of a Deque in Java
  
import java.util.*;
  
public class DequeExample {
    public static void main(String[] args)
    {
        Deque<String> deque
            = new LinkedList<String>();
  
        // We can add elements to the queue
        // in various ways
  
        // Add at the last
        deque.add("Element 1 (Maria)");
  
        // Add at the first
        deque.addFirst("Element 2 (Alice)");
  
        // Add at the last
        deque.addLast("Element 3 (Clarice)");
  
        // Add at the first
        deque.push("Element 4 (Daniele)");
  
        // Add at the last
        deque.offer("Element 5 (Davi)");
  
        System.out.println(deque + "\n");
  
        // We can remove the first element
        // or the last element.
        deque.removeFirst();
        deque.removeLast();
        System.out.println("Deque after removing "
                           + "first and last: "
                           + deque);
    }
}
    }
}
